#!/usr/bin/env ruby
require 'rubygems'
require 'munkey'

class MunkeyBin
  def initialize(args)
    @options = {}
    @options[:verbose] = args.delete('--quiet') ? false : true
  end
  
  def clone(args)
    ignores = read_ignores(args.shift) if /^--ignore=/ =~ args.first
    src = args.shift
    dst = args.shift
    dst ||= join_to_pwd(src.split('/').last) if src
    dst = join_to_pwd(dst) unless dst.slice(0, 1) == '/'
    show_help unless src && dst
    Munkey::clone src, dst, @options.merge(:ignores => ignores)
  end
  
  def pull(args)
    merge = args.delete('--no-merge') ? false : true
    quick = args.delete('--full-download') ? true : false
    Munkey.new(Dir.pwd, @options).pull(:merge => merge)
  end
  
  def push(args)
    dryrun = args.delete('--dry-run') ? true : false
    Munkey.new(Dir.pwd, @options).push(dryrun)
  end
  
  def show_help
    puts "Usage: munkey <command> [options] [args]"
    puts
    puts "munkey clone [--quiet] [--ignore=ignoresfile] ftp://usr:pwd@host/dir [dst]"
    puts "\t- Clone from FTP source"
    puts "munkey pull [--quiet] [--no-merge] [--full-download]"
    puts "\t- Pull in changes from FTP source"
    puts "munkey push [--quiet]  [--dry-run]"
    puts "\t- Push your changes back to FTP source"
    exit
  end
  
  protected
    def join_to_pwd(path)
      /^\// =~ path ? path : File.join(Dir.pwd, path)
    end
    
    def read_ignores(arg)
      ignore_file = arg.gsub(/^--ignore=/, '')
      File.read join_to_pwd(ignore_file)
    end
end

munkey = MunkeyBin.new(ARGV)
if !ARGV.empty? and munkey.respond_to?(cmd = ARGV.shift)
  begin
    munkey.send cmd, ARGV
  rescue NoMethodError
    puts "WARNING: Invalid FTP Source"
  end
else
  munkey.show_help
end
